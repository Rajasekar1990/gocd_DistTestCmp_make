format_version: 10
pipelines:
  JMeter_DistTesting_sh:
    group: defaultGroup
    label_template: ${COUNT}
    lock_behavior: unlockWhenFinished
    display_order: -1
    environment_variables:
      ACRusername: jmeteracrrepo
      NumOfSlaves: 2
    secure_variables:
      ACRpwd: AES:93Shl6wGNWELgvubz8A56g==:nJYINiT7QDipJ5IFwPs/wIOzfOwnxSzgq8XGjeJSeq7E7guzR0qCCJJ0Pq+hAUxi
    materials:
      git-e912034:
        git: https://github.com/Rajasekar1990/gocd_DistTestCmp_sh.git
        username: Rajasekar1990
        shallow_clone: false
        auto_update: true
        branch: main
        encrypted_password: AES:6H8j1ldfMqlLY+zxGdNigQ==:SzWrCDRamRRv49Cv8D8GHA==
    stages:
    - ACR_Login:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: manual
          allow_only_on_success: false
        jobs:
          Login_To_ACR:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - Login to ACR
                command: echo
                run_if: passed
            - exec:
                arguments:
                - -c
                - sh ACR_Login.sh
                command: /bin/bash
                run_if: passed
    - ACR_JmMaster_Build_Push_Image:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: true
        jobs:
          JMeter_Master_Img:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - sh ACR_Build_Push_Master_Img.sh
                command: /bin/bash
                run_if: passed
    - ACR_JmSlave_Build_Push_Image:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: true
        jobs:
          JMeter_Slave_Img:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - sh ACR_Build_Push_Slave_Img.sh
                command: /bin/bash
                run_if: passed
    - Execute_Performance_Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: true
        jobs:
          Run_Load_Test:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - sh runloadtest.sh
                command: /bin/bash
                run_if: passed
    - ReportCreation:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          CreateHTMLReport:
            timeout: 0
            artifacts:
            - build:
                source: Report*
                destination: ''
            tasks:
            - exec:
                arguments:
                - -c
                - sh createHTMLReport.sh
                command: /bin/bash
                run_if: passed
    - CleanUpTestEnvironment:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: true
        jobs:
           KillandRemoveContainers:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - sh killremovedockercmp.sh
                command: /bin/bash
                run_if: passed